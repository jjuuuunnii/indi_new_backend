plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.indi'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

compileJava {
	options.compilerArgs << '-parameters'
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'com.auth0:java-jwt:4.3.0'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	implementation 'org.json:json:20230227'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.8.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.0'
	runtimeOnly 'org.junit.platform:junit-platform-launcher:1.7.2'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.1.RELEASE'

	testImplementation("org.junit.vintage:junit-vintage-engine") {
		exclude group: "org.hamcrest", module: "hamcrest-core"
	}
}

test {
	useJUnitPlatform()
}


sourceSets {
	main {
		resources {
			srcDirs = ["$projectDir/src/main/resources"]
		}
	}
}

task cleanAppYml(type: Delete) {
	delete fileTree('src/main/resources') {
		include 'application*.yml'
	}
}

task copySecretAppYml(type: Copy) {
	dependsOn 'cleanAppYml'
	from './indi_new_backend_submodule'
	include 'application*.yml'
	into 'src/main/resources'
}

processResources.dependsOn('copySecretAppYml')


